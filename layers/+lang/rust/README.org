#+TITLE: Rust contribution layer for Spacemacs
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="../../../css/readtheorg.css" />

[[file:img/rust.png]]

* Table of Contents                                         :TOC_4_org:noexport:
 - [[Description][Description]]
 - [[Install][Install]]
   - [[Layer][Layer]]
   - [[Cargo][Cargo]]
   - [[Auto-completion][Auto-completion]]
 - [[Key bindings][Key bindings]]

* Description
This layer aims to support [[http://www.rust-lang.org/][Rust]] development in Spacemacs.

It supports [[http://doc.crates.io/index.html][Cargo]], and has some basic auto-completion support through [[https://github.com/phildawes/racer][Racer]],
though Racer needs some additional configurations as described on their page.

* Install
** Layer
To use this configuration layer, add it to your =~/.spacemacs=. You will need to
add =rust= to the existing =dotspacemacs-configuration-layers= list in this
file.

** Cargo
[[http://doc.crates.io/index.html][Cargo]] is a project management command line tool for Rust. Installation
instructions can be found on the main page of [[http://doc.crates.io/index.html][Cargo]].

** Auto-completion
To enable auto-completion, ensure that the =auto-completion= layer is enabled and
add the following line to your =dotspacemacs/user-init=:

#+BEGIN_SRC emacs-lisp
(setq-default rust-enable-racer t)
#+END_SRC

You have to install [[https://github.com/phildawes/racer][Racer]] to use this. For more information on the installation
procedure, look [[https://github.com/racer-rust/emacs-racer][here]].

* Key bindings

| Key Binding | Description                                 |
|-------------+---------------------------------------------|
| ~, c .~     | repeat the last Cargo command               |
| ~, c c~     | compile project with Cargo                  |
| ~, c d~     | generate documentation with Cargo           |
| ~, c e~     | run benchmarks with Cargo                   |
| ~, c f~     | run the current test with Cargo             |
| ~, c i~     | create a new project with Cargo (init)      |
| ~, c l~     | remove build artifacts with Cargo           |
| ~, c n~     | create a new project with Cargo (new)       |
| ~, c o~     | run all tests in current file with Cargo    |
| ~, c r~     | execute a project with Cargo                |
| ~, c s~     | search for packages on crates.io with Cargo |
| ~, c t~     | run tests with Cargo                        |
| ~, c u~     | update dependencies with Cargo              |
| ~, c x~     | execute a project example with Cargo        |
| ~, g g~     | go jump to definition                       |
